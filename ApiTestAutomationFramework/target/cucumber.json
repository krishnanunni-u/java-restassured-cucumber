<<<<<<< HEAD
[{"line":1,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":397963800,"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:44.919Z","before":[{"result":{"duration":251903200,"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":9,"name":"Successfully add a new pet to the store","description":"","id":"petstore-api-tests;successfully-add-a-new-pet-to-the-store","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":375893500,"status":"passed"},"line":10,"name":"I prepare a new pet with name \"doggie\" and status \"available\"","match":{"arguments":[{"val":"\"doggie\"","offset":30},{"val":"\"available\"","offset":50}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":3197536400,"status":"passed"},"line":11,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"duration":16047900,"status":"passed"},"line":12,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":621388000,"status":"passed"},"line":13,"name":"the response should contain the name \"doggie\"","match":{"arguments":[{"val":"\"doggie\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":15079200,"status":"passed"},"line":14,"name":"the response should contain the status \"available\"","match":{"arguments":[{"val":"\"available\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Positive"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:49.832Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":17,"name":"Fail to add a pet with an invalid payload","description":"","id":"petstore-api-tests;fail-to-add-a-pet-with-an-invalid-payload","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1007600,"status":"passed"},"line":18,"name":"I prepare an invalid pet payload","match":{"location":"com.example.api.tests.PetStoreSteps.prepareInvalidPetPayload()"},"keyword":"Given "},{"result":{"duration":1259234400,"status":"passed"},"line":19,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat com.example.api.tests.PetStoreSteps.verifyStatusCode(PetStoreSteps.java:102)\r\n\tat âœ½.the API should return status code 400(file:///C:/Projects/ApiTestAutomationFramework/src/test/resources/features/petstore.feature:20)\r\n","duration":14560200,"status":"failed"},"line":20,"name":"the API should return status code 400","match":{"arguments":[{"val":"400","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":21,"name":"the response should contain an error message","match":{"location":"com.example.api.tests.PetStoreSteps.verifyErrorMessage()"},"keyword":"And "}],"tags":[{"name":"@Negative"},{"name":"@InvalidPayload"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:51.125Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":24,"name":"Retrieve a non-existent pet","description":"","id":"petstore-api-tests;retrieve-a-non-existent-pet","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1250219300,"status":"passed"},"line":25,"name":"I send a GET request for a pet with ID 99999","match":{"arguments":[{"val":"99999","offset":39}],"location":"com.example.api.tests.PetStoreSteps.sendGetRequestForPet(int)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat com.example.api.tests.PetStoreSteps.verifyStatusCode(PetStoreSteps.java:102)\r\n\tat âœ½.the API should return status code 404(file:///C:/Projects/ApiTestAutomationFramework/src/test/resources/features/petstore.feature:26)\r\n","duration":1374300,"status":"failed"},"line":26,"name":"the API should return status code 404","match":{"arguments":[{"val":"404","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":27,"name":"the response should contain \"Pet not found\"","match":{"arguments":[{"val":"\"Pet not found\"","offset":28}],"location":"com.example.api.tests.PetStoreSteps.verifyGenericErrorMessage(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Negative"},{"name":"@NotFound"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:52.410Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":39,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;2","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":8010000,"status":"passed"},"line":31,"name":"I prepare a new pet with name \"doggie\" and status \"available\"","match":{"arguments":[{"val":"\"doggie\"","offset":30},{"val":"\"available\"","offset":50}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1577077900,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":32745300,"status":"passed"},"line":34,"name":"the response should contain the name \"doggie\"","match":{"arguments":[{"val":"\"doggie\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":8026000,"status":"passed"},"line":35,"name":"the response should contain the status \"available\"","match":{"arguments":[{"val":"\"available\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:54.045Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":40,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;3","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":7514600,"status":"passed"},"line":31,"name":"I prepare a new pet with name \"kitty\" and status \"pending\"","match":{"arguments":[{"val":"\"kitty\"","offset":30},{"val":"\"pending\"","offset":49}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1577776500,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":8275800,"status":"passed"},"line":34,"name":"the response should contain the name \"kitty\"","match":{"arguments":[{"val":"\"kitty\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":8001700,"status":"passed"},"line":35,"name":"the response should contain the status \"pending\"","match":{"arguments":[{"val":"\"pending\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-11-29T06:43:55.646Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":41,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;4","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":31,"name":"I prepare a new pet with name \"fishy\" and status \"sold\"","match":{"arguments":[{"val":"\"fishy\"","offset":30},{"val":"\"sold\"","offset":49}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1713141100,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":16551300,"status":"passed"},"line":34,"name":"the response should contain the name \"fishy\"","match":{"arguments":[{"val":"\"fishy\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":7515900,"status":"passed"},"line":35,"name":"the response should contain the status \"sold\"","match":{"arguments":[{"val":"\"sold\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]}],"name":"PetStore API Tests","description":"  This feature validates the functionality of the PetStore API.\n  It ensures that new pets can be added and responses are correct, with validations for both positive and negative scenarios.","id":"petstore-api-tests","keyword":"Feature","uri":"file:src/test/resources/features/petstore.feature","tags":[]}]
=======
[{"line":1,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":282833900,"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:47:52.353Z","before":[{"result":{"duration":192848200,"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":9,"name":"Successfully add a new pet to the store","description":"","id":"petstore-api-tests;successfully-add-a-new-pet-to-the-store","after":[{"result":{"duration":980700,"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":132248200,"status":"passed"},"line":10,"name":"I prepare a new pet with name \"doggie\" and status \"available\"","match":{"arguments":[{"val":"\"doggie\"","offset":30},{"val":"\"available\"","offset":50}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":2672243100,"status":"passed"},"line":11,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"duration":13091900,"status":"passed"},"line":12,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":417732300,"status":"passed"},"line":13,"name":"the response should contain the name \"doggie\"","match":{"arguments":[{"val":"\"doggie\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":7566400,"status":"passed"},"line":14,"name":"the response should contain the status \"available\"","match":{"arguments":[{"val":"\"available\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Positive"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":998300,"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:47:56.092Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":17,"name":"Fail to add a pet with an invalid payload","description":"","id":"petstore-api-tests;fail-to-add-a-pet-with-an-invalid-payload","after":[{"result":{"duration":923300,"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":18,"name":"I prepare an invalid pet payload","match":{"location":"com.example.api.tests.PetStoreSteps.prepareInvalidPetPayload()"},"keyword":"Given "},{"result":{"duration":1463799900,"status":"passed"},"line":19,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat com.example.api.tests.PetStoreSteps.verifyStatusCode(PetStoreSteps.java:101)\r\n\tat âœ½.the API should return status code 400(file:///C:/Projects/ApiTestAutomationFramework/src/test/resources/features/petstore.feature:20)\r\n","duration":33620500,"status":"failed"},"line":20,"name":"the API should return status code 400","match":{"arguments":[{"val":"400","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":21,"name":"the response should contain an error message","match":{"location":"com.example.api.tests.PetStoreSteps.verifyErrorMessage()"},"keyword":"And "}],"tags":[{"name":"@Negative"},{"name":"@InvalidPayload"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:47:57.602Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":24,"name":"Retrieve a non-existent pet","description":"","id":"petstore-api-tests;retrieve-a-non-existent-pet","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1593554700,"status":"passed"},"line":25,"name":"I send a GET request for a pet with ID 99999","match":{"arguments":[{"val":"99999","offset":39}],"location":"com.example.api.tests.PetStoreSteps.sendGetRequestForPet(int)"},"keyword":"When "},{"result":{"status":"passed"},"line":26,"name":"the API should return status code 404","match":{"arguments":[{"val":"404","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":22172000,"status":"passed"},"line":27,"name":"the response should contain \"Pet not found\"","match":{"arguments":[{"val":"\"Pet not found\"","offset":28}],"location":"com.example.api.tests.PetStoreSteps.verifyGenericErrorMessage(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Negative"},{"name":"@NotFound"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:47:59.222Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":39,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;2","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":3089700,"status":"passed"},"line":31,"name":"I prepare a new pet with name \"doggie\" and status \"available\"","match":{"arguments":[{"val":"\"doggie\"","offset":30},{"val":"\"available\"","offset":50}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1564207600,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"duration":1002300,"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":14658500,"status":"passed"},"line":34,"name":"the response should contain the name \"doggie\"","match":{"arguments":[{"val":"\"doggie\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":12010100,"status":"passed"},"line":35,"name":"the response should contain the status \"available\"","match":{"arguments":[{"val":"\"available\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:48:00.819Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":40,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;3","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1998900,"status":"passed"},"line":31,"name":"I prepare a new pet with name \"kitty\" and status \"pending\"","match":{"arguments":[{"val":"\"kitty\"","offset":30},{"val":"\"pending\"","offset":49}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1447399700,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"duration":1008200,"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":11549900,"status":"passed"},"line":34,"name":"the response should contain the name \"kitty\"","match":{"arguments":[{"val":"\"kitty\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":11041200,"status":"passed"},"line":35,"name":"the response should contain the status \"pending\"","match":{"arguments":[{"val":"\"pending\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"I set the base URI for PetStore API","match":{"location":"com.example.api.tests.PetStoreSteps.setBaseURI()"},"keyword":"Given "}]},{"start_timestamp":"2024-12-16T03:48:02.295Z","before":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.beforeScenario(io.cucumber.java.Scenario)"}}],"line":41,"name":"Add pets with different names and statuses","description":"","id":"petstore-api-tests;add-pets-with-different-names-and-statuses;;4","after":[{"result":{"status":"passed"},"match":{"location":"com.example.api.tests.CucumberHooks.afterScenario(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2016000,"status":"passed"},"line":31,"name":"I prepare a new pet with name \"fishy\" and status \"sold\"","match":{"arguments":[{"val":"\"fishy\"","offset":30},{"val":"\"sold\"","offset":49}],"location":"com.example.api.tests.PetStoreSteps.prepareNewPet(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1506467600,"status":"passed"},"line":32,"name":"I send a POST request to add the pet","match":{"location":"com.example.api.tests.PetStoreSteps.sendPostRequest()"},"keyword":"When "},{"result":{"duration":1005000,"status":"passed"},"line":33,"name":"the API should return status code 200","match":{"arguments":[{"val":"200","offset":34}],"location":"com.example.api.tests.PetStoreSteps.verifyStatusCode(int)"},"keyword":"Then "},{"result":{"duration":7021300,"status":"passed"},"line":34,"name":"the response should contain the name \"fishy\"","match":{"arguments":[{"val":"\"fishy\"","offset":37}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseName(java.lang.String)"},"keyword":"And "},{"result":{"duration":8432500,"status":"passed"},"line":35,"name":"the response should contain the status \"sold\"","match":{"arguments":[{"val":"\"sold\"","offset":39}],"location":"com.example.api.tests.PetStoreSteps.verifyResponseStatus(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@AddPet"}]}],"name":"PetStore API Tests","description":"  This feature validates the functionality of the PetStore API.\n  It ensures that new pets can be added and responses are correct, with validations for both positive and negative scenarios.","id":"petstore-api-tests","keyword":"Feature","uri":"file:src/test/resources/features/petstore.feature","tags":[]}]
>>>>>>> origin/master
